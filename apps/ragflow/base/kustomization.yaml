# apps/ragflow/base/kustomization.yaml
apiVersion: kustomize.config.k8s.io/v1beta1
kind: Kustomization

# 设置此应用的 Sync Wave 为 "1"，确保它在 Sealed Secrets (Wave 0) 之后部署
commonAnnotations:
  argocd.argroj.io/sync-wave: "1"

resources:
  # 1. 引用您创建的、包含所有密码的加密文件
  - sealed-ragflow-credentials.yaml

helmCharts:
  # 2. 这是最终修正的 Helm Chart 定义
  - name: charts # <-- name 字段现在指向包含 Chart.yaml 的本地目录名
    releaseName: ragflow
    namespace: ragflow
    # valuesFile 指向与 kustomization.yaml 同级的 values.yaml
    valuesFile: values.yaml

patches:
  # 3. 在这里保留所有用于注入密码的补丁
  # (补丁 A, B, C, D 的内容保持不变)
  - patch: |-
      - op: add
        path: /spec/template/spec/containers/0/env/-
        value: { name: MYSQL_PASSWORD, valueFrom: { secretKeyRef: { name: ragflow-credentials, key: mysql-password } } }
      - op: add
        path: /spec/template/spec/containers/0/env/-
        value: { name: MINIO_PASSWORD, valueFrom: { secretKeyRef: { name: ragflow-credentials, key: minio-password } } }
      - op: add
        path: /spec/template/spec/containers/0/env/-
        value: { name: REDIS_PASSWORD, valueFrom: { secretKeyRef: { name: ragflow-credentials, key: redis-password } } }
    target: { kind: Deployment, name: ragflow-ragflow }
  - patch: |-
      - op: add
        path: /spec/template/spec/containers/0/env/-
        value: { name: MYSQL_PASSWORD, valueFrom: { secretKeyRef: { name: ragflow-credentials, key: mysql-password } } }
    target: { kind: Deployment, name: ragflow-mysql }
  - patch: |-
      - op: add
        path: /spec/template/spec/containers/0/env/-
        value: { name: MINIO_ROOT_PASSWORD, valueFrom: { secretKeyRef: { name: ragflow-credentials, key: minio-password } } }
    target: { kind: Deployment, name: ragflow-minio }
  - patch: |-
      - op: add
        path: /spec/template/spec/containers/0/env/-
        value: { name: REDIS_PASSWORD, valueFrom: { secretKeyRef: { name: ragflow-credentials, key: redis-password } } }
    target: { kind: Deployment, name: ragflow-redis }
